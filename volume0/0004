import java.io.*;
import java.util.*;
import java.io.InputStreamReader;
import java.math.BigDecimal;

class Main
{
    public static void main (String[] args) throws java.lang.Exception
	{
		try{
			BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
			
			String line;
			
			//ここでlineに値を入れているのを忘れずに
			while((line = br.readLine()) != null){
				String strArr[] = line.split(" ");
				//入力値の数が違えばエラー
				
				//double型などにすれば0での除算が出来る
					//ここもっと綺麗に書きたい
				int a = Integer.parseInt(strArr[0]);
				int b = Integer.parseInt(strArr[1]);
				int c = Integer.parseInt(strArr[2]);
				int d = Integer.parseInt(strArr[3]);
				int e = Integer.parseInt(strArr[4]);
				int f = Integer.parseInt(strArr[5]);
				
				float X = (float) (c*e-f*b)/(a*e-d*b);
				float Y = (float) (c*d-f*a)/(b*d-e*a);
				
				
				//これの意味が分からない
				if(X==-0){
					X = 0;
				}
				
				if(Y==-0){
					Y = 0;
				}
				
				//BigDecimal X1 = new BigDecimal(String.valueOf(X));
				//BigDecimal Y1 = new BigDecimal(String.valueOf(Y));
				
				//double X2 = X1.setScale(3,BigDecimal.ROUND_HALF_UP).doubleValue();
				//double Y2 = Y1.setScale(3,BigDecimal.ROUND_HALF_UP).doubleValue();
				
				//printfを使う事で表示する際の桁数等を決定できる
					//ここもっと綺麗に書きたい
				
				System.out.printf("%.3f",X);
				System.out.print(" ");
				System.out.printf("%.3f",Y);
				System.out.println("");
				
			}
			
		}catch(IOException e){
			System.out.println(e);
		}	
	}
    //BIGDECIMALとか考えてみた方が良いかも
    //http://d.hatena.ne.jp/j5ik2o/20091024/1256369305
    
    //int型の計算結果をfloatにキャストして、-0の時の値を0に代入し直したら通った。
    //よくわからない。今後の課題。
}
